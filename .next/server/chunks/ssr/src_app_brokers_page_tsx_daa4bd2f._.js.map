{"version":3,"sources":["turbopack:///[project]/src/app/brokers/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport Link from 'next/link';\nimport Layout from '@/components/Layout';\nimport ProtectedRoute from '@/components/ProtectedRoute';\nimport { brokerAPI } from '@/services/api';\nimport Select from 'react-select';\nimport ReactPaginate from 'react-paginate';\nimport { toast } from 'react-hot-toast';\n\ninterface Broker {\n  _id: string;\n  userId: string;\n  firmName: string;\n  region: Array<{\n    _id: string;\n    name: string;\n    description: string;\n    state: string;\n    city: string;\n    centerLocation: string;\n    radius: number;\n  }>;\n  regionId: string | null;\n  status: string;\n  approvedByAdmin: \"unblocked\" | \"blocked\";\n  kycDocs: {\n    aadhar: string;\n    pan: string;\n    gst: string;\n  };\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  // Optional fields that might be populated\n  name?: string;\n  email?: string;\n  phone?: string;\n  address?: string;\n  gender?: string;\n  accreditedBy?: string;\n  licenseNumber?: string;\n  expertiseField?: string;\n  state?: string;\n  brokerImage?: string;\n  membership?: \"basic\" | \"standard\" | \"premium\";\n}\n\n// Skeleton Loader Components\nconst Skeleton = ({ className = '', height = 'h-4', width = 'w-full', rounded = false }: { className?: string; height?: string; width?: string; rounded?: boolean }) => (\n  <div \n    className={`bg-gray-200 animate-pulse ${height} ${width} ${rounded ? 'rounded-full' : 'rounded'} ${className}`}\n  />\n);\n\nconst BrokersTableSkeleton = () => {\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n      {/* Table Header Skeleton */}\n      <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-200\">\n        <div className=\"grid grid-cols-6 gap-4\">\n          <Skeleton height=\"h-4\" width=\"w-16\" />\n          <Skeleton height=\"h-4\" width=\"w-20\" />\n          <Skeleton height=\"h-4\" width=\"w-16\" />\n          <Skeleton height=\"h-4\" width=\"w-24\" />\n          <Skeleton height=\"h-4\" width=\"w-20\" />\n          <Skeleton height=\"h-4\" width=\"w-16\" />\n        </div>\n      </div>\n\n      {/* Table Body Skeleton */}\n      <div className=\"divide-y divide-gray-200\">\n        {Array.from({ length: 5 }).map((_, index) => (\n          <div key={index} className=\"px-6 py-4\">\n            <div className=\"grid grid-cols-6 gap-4 items-center\">\n              {/* Name Column Skeleton */}\n              <div className=\"flex items-center space-x-3\">\n                <Skeleton height=\"h-10\" width=\"w-10\" rounded />\n                <div className=\"space-y-2\">\n                  <Skeleton height=\"h-4\" width=\"w-24\" />\n                  <Skeleton height=\"h-3\" width=\"w-32\" />\n                </div>\n              </div>\n\n              {/* Contact Column Skeleton */}\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center space-x-2\">\n                  <Skeleton height=\"h-4\" width=\"w-4\" />\n                  <Skeleton height=\"h-4\" width=\"w-20\" />\n                  <Skeleton height=\"h-3\" width=\"w-3\" />\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Skeleton height=\"h-4\" width=\"w-4\" />\n                  <Skeleton height=\"h-3\" width=\"w-28\" />\n                  <Skeleton height=\"h-3\" width=\"w-3\" />\n                </div>\n              </div>\n\n              {/* Region Column Skeleton */}\n              <div className=\"space-y-2\">\n                <Skeleton height=\"h-4\" width=\"w-20\" />\n                <Skeleton height=\"h-3\" width=\"w-24\" />\n              </div>\n\n              {/* Membership Column Skeleton */}\n              <div>\n                <Skeleton height=\"h-6\" width=\"w-16\" rounded />\n              </div>\n\n              {/* Numbers Column Skeleton */}\n              <div className=\"space-y-1\">\n                <Skeleton height=\"h-4\" width=\"w-16\" />\n                <Skeleton height=\"h-3\" width=\"w-20\" />\n              </div>\n\n              {/* Action Column Skeleton */}\n              <div className=\"flex space-x-2\">\n                <Skeleton height=\"h-7\" width=\"w-16\" rounded />\n                <Skeleton height=\"h-7\" width=\"w-16\" rounded />\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst SummaryCardsSkeleton = () => {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-3  gap-4 mb-6\">\n      {Array.from({ length: 3 }).map((_, index) => (\n        <div key={index} className=\"bg-gray-50 rounded-lg p-6 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-2\">\n              <Skeleton height=\"h-4\" width=\"w-20\" />\n              <Skeleton height=\"h-8\" width=\"w-12\" />\n            </div>\n            <div className=\"bg-gray-100 rounded-lg p-3\">\n              <Skeleton height=\"h-6\" width=\"w-6\" />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default function BrokersPage() {\n  const [brokers, setBrokers] = useState<Broker[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [membershipFilter, setMembershipFilter] = useState('all');\n  const [regionFilter, setRegionFilter] = useState('all');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalBrokers, setTotalBrokers] = useState(0);\n  const [brokerStats, setBrokerStats] = useState({\n    total: 0,\n    unblocked: 0,\n    blocked: 0\n  });\n  const [showBlockConfirm, setShowBlockConfirm] = useState(false);\n  const [showUnblockConfirm, setShowUnblockConfirm] = useState(false);\n  const [selectedBrokerId, setSelectedBrokerId] = useState<string | null>(null);\n  const [selectedBrokerName, setSelectedBrokerName] = useState<string>('');\n  const [isSearching, setIsSearching] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [newBroker, setNewBroker] = useState({ name: '', email: '', phone: '' });\n\n  // Fetch brokers from API\n  const fetchBrokers = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError('');\n\n      console.log('🔄 Fetching brokers with statusFilter:', statusFilter, 'searchTerm:', searchTerm);\n      const approvedByAdmin = statusFilter === 'unblocked' ? 'unblocked' : statusFilter === 'blocked' ? 'blocked' : undefined;\n      const response = await brokerAPI.getBrokers(currentPage, 10, approvedByAdmin, searchTerm);\n      \n      console.log('📊 API Response:', response); // Debug log\n      console.log('📊 Brokers data:', response.data.brokers);\n      \n      // Debug each broker's approvedByAdmin value\n      if (response.data.brokers) {\n        response.data.brokers.forEach((broker: Broker, index: number) => {\n          console.log(`📊 Broker ${index + 1}:`, {\n            _id: broker._id,\n            name: broker.name,\n            approvedByAdmin: broker.approvedByAdmin,\n            type: typeof broker.approvedByAdmin\n          });\n        });\n      }\n      \n      // Add sample membership data for testing if not present\n      const brokersWithMembership = (response.data.brokers || []).map((broker: Broker, index: number) => ({\n        ...broker,\n        membership: broker.membership || (['basic', 'standard', 'premium'][index % 3] as 'basic' | 'standard' | 'premium')\n      }));\n      \n      setBrokers(brokersWithMembership);\n      setTotalPages(response.data.pagination.totalPages || 1);\n      setTotalBrokers(response.data.pagination.totalBrokers || 0);\n      \n      // Update broker statistics from API response\n      if (response.data.stats) {\n        setBrokerStats({\n          total: response.data.stats.totalAllBrokers || 0,\n          unblocked: response.data.stats.totalUnblockedBrokers || 0,\n          blocked: response.data.stats.totalBlockedBrokers || 0\n        });\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch brokers');\n    } finally {\n      setLoading(false);\n    }\n  }, [currentPage, statusFilter, searchTerm]);\n\n  // Handle broker blocking confirmation\n  const handleBlockClick = (brokerId: string, brokerName: string) => {\n    setSelectedBrokerId(brokerId);\n    setSelectedBrokerName(brokerName);\n    setShowBlockConfirm(true);\n  };\n\n  // Handle broker unblocking confirmation\n  const handleUnblockClick = (brokerId: string, brokerName: string) => {\n    setSelectedBrokerId(brokerId);\n    setSelectedBrokerName(brokerName);\n    setShowUnblockConfirm(true);\n  };\n\n  // Handle broker blocking\n  const handleBlock = async () => {\n    if (!selectedBrokerId) return;\n    \n    try {\n      setError('');\n      console.log('🔴 Blocking broker with ID:', selectedBrokerId);\n      const response = await brokerAPI.blockBroker(selectedBrokerId);\n      console.log('🔴 Block API response:', response);\n      \n      // Update local state immediately\n      setBrokers(prevBrokers => \n        prevBrokers.map(broker => \n          broker._id === selectedBrokerId \n            ? { ...broker, approvedByAdmin: 'blocked' }\n            : broker\n        )\n      );\n      \n      // Update stats immediately\n      setBrokerStats(prevStats => ({\n        ...prevStats,\n        unblocked: prevStats.unblocked - 1,\n        blocked: prevStats.blocked + 1\n      }));\n      \n      // Also refresh from API to get any other updates\n      await fetchBrokers();\n      \n      // Close confirmation dialog\n      setShowBlockConfirm(false);\n      setSelectedBrokerId(null);\n      setSelectedBrokerName('');\n    } catch (err) {\n      console.error('🔴 Block error:', err);\n      setError(err instanceof Error ? err.message : 'Failed to block broker');\n    }\n  };\n\n  // Handle broker unblocking\n  const handleUnblock = async () => {\n    if (!selectedBrokerId) return;\n    \n    try {\n      setError('');\n      console.log('🟢 Unblocking broker with ID:', selectedBrokerId);\n      const response = await brokerAPI.unblockBroker(selectedBrokerId);\n      console.log('🟢 Unblock API response:', response);\n      \n      // Update local state immediately\n      setBrokers(prevBrokers => \n        prevBrokers.map(broker => \n          broker._id === selectedBrokerId \n            ? { ...broker, approvedByAdmin: 'unblocked' }\n            : broker\n        )\n      );\n      \n      // Update stats immediately\n      setBrokerStats(prevStats => ({\n        ...prevStats,\n        unblocked: prevStats.unblocked + 1,\n        blocked: prevStats.blocked - 1\n      }));\n      \n      // Also refresh from API to get any other updates\n      await fetchBrokers();\n      \n      // Close confirmation dialog\n      setShowUnblockConfirm(false);\n      setSelectedBrokerId(null);\n      setSelectedBrokerName('');\n    } catch (err) {\n      console.error('🟢 Unblock error:', err);\n      setError(err instanceof Error ? err.message : 'Failed to unblock broker');\n    }\n  };\n\n  // Filter brokers based on membership and region filters (search is now server-side)\n  const filteredBrokers = brokers.filter(broker => {\n    // Membership filter - check actual broker membership data\n    const matchesMembership = membershipFilter === 'all' || \n      (broker.membership && broker.membership.toLowerCase() === membershipFilter.toLowerCase());\n\n    // Region filter\n    const matchesRegion = regionFilter === 'all' || \n      (broker.region && broker.region.length > 0 && \n       broker.region[0].name.toLowerCase().includes(regionFilter.toLowerCase()));\n\n    return matchesMembership && matchesRegion;\n  });\n\n\n  // Fetch brokers when component mounts\n  useEffect(() => {\n    fetchBrokers();\n  }, [fetchBrokers]);\n\n  // Handle search and filter changes with debouncing\n  useEffect(() => {\n    // Set searching state when filters change\n    setIsSearching(true);\n    \n    const timeoutId = setTimeout(() => {\n      setCurrentPage(1);\n      fetchBrokers();\n      setIsSearching(false);\n    }, 500); // 500ms debounce\n\n    return () => {\n      clearTimeout(timeoutId);\n      setIsSearching(false);\n    };\n  }, [searchTerm, statusFilter, membershipFilter, regionFilter, fetchBrokers]);\n\n  // Helper functions\n\n\n\n\n\n  // Use image URL with proxy for external URLs to avoid CORS issues\n  const getBrokerImageUrl = (brokerImage: string | undefined) => {\n    console.log('🖼️ getBrokerImageUrl called with:', brokerImage);\n    \n    if (!brokerImage) {\n      console.log('🖼️ No broker image, using fallback');\n      return \"https://www.w3schools.com/howto/img_avatar.png\";\n    }\n    \n    // If it's an external URL (not localhost), use the proxy\n    if (brokerImage.includes('broker-adda-be.algofolks.com') || \n        brokerImage.includes('https://') || \n        (brokerImage.includes('http://') && !brokerImage.includes('localhost'))) {\n      const proxyUrl = `/api/image-proxy?url=${encodeURIComponent(brokerImage)}`;\n      console.log('🖼️ Using proxy URL:', proxyUrl);\n      return proxyUrl;\n    }\n    \n    // For localhost URLs, return directly\n    console.log('🖼️ Using direct URL:', brokerImage);\n    return brokerImage;\n  };\n\n  // Generate consistent sample data for demonstration\n  const getSampleData = (broker: Broker, index: number) => {\n    const sampleData = [\n      { leads: 4, properties: 2, membership: 'Premium' },\n      { leads: 8, properties: 5, membership: 'Premium' },\n      { leads: 3, properties: 7, membership: 'Standard' },\n      { leads: 9, properties: 1, membership: 'Premium' },\n      { leads: 6, properties: 4, membership: 'Standard' },\n      { leads: 2, properties: 8, membership: 'Premium' },\n      { leads: 7, properties: 3, membership: 'Standard' }\n    ];\n    \n    return sampleData[index % sampleData.length];\n  };\n\n\n  return (\n    <ProtectedRoute>\n      <Layout>\n        <div className=\"space-y-6\">\n        {/* Page Header */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-2xl font-bold text-gray-900\">Brokers</h1>\n            <button\n              onClick={() => setShowAddModal(true)}\n              className=\"inline-flex items-center gap-2 px-4 py-2 rounded-md text-white bg-teal-600 hover:bg-teal-700 text-sm shadow-sm\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n              </svg>\n              Add Broker\n            </button>\n          </div>\n          <p className=\"text-gray-500 mt-1 text-sm\">View and manage all registered brokers</p>\n        </div>\n\n        {/* Search and Filter Bar */}\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0 mb-6\">\n          {/* Search Bar */}\n          <div className=\"flex-1 max-w-md\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                {isSearching ? (\n                  <svg className=\"h-5 w-5 text-gray-400 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                  </svg>\n                ) : (\n                  <svg className=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                )}\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"Search by Firm Name, Contact, Region\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n              />\n            </div>\n          </div>\n\n          {/* Filter Buttons */}\n          <div className=\"flex flex-wrap items-center gap-2\">\n            {/* Broker Status Dropdown */}\n            <div className=\"relative\">\n              <select\n                value={statusFilter}\n                onChange={(e) => setStatusFilter(e.target.value)}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 appearance-none pr-8\"\n              >\n                <option value=\"all\">All Brokers</option>\n                <option value=\"unblocked\">Unblocked</option>\n                <option value=\"blocked\">Blocked</option>\n              </select>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n              </div>\n            </div>\n            {/* Membership Dropdown */}\n            <div className=\"relative\">\n              <select\n                value={membershipFilter}\n                onChange={(e) => setMembershipFilter(e.target.value)}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 appearance-none pr-8\"\n              >\n                <option value=\"all\">All Membership</option>\n                <option value=\"premium\">Premium</option>\n                <option value=\"standard\">Standard</option>\n                <option value=\"basic\">Basic</option>\n              </select>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n              </div>\n            </div>\n            {/* Region Dropdown */}\n            <div className=\"relative\">\n              <select\n                value={regionFilter}\n                onChange={(e) => setRegionFilter(e.target.value)}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 appearance-none pr-8\"\n              >\n                <option value=\"all\">All Regions</option>\n                <option value=\"mumbai\">Mumbai</option>\n                <option value=\"delhi\">Delhi</option>\n                <option value=\"bangalore\">Bangalore</option>\n                <option value=\"hyderabad\">Hyderabad</option>\n                <option value=\"pune\">Pune</option>\n                <option value=\"agra\">Agra</option>\n                <option value=\"noida\">Noida</option>\n                <option value=\"lucknow\">Lucknow</option>\n                <option value=\"chennai\">Chennai</option>\n              </select>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n              </div>\n            </div>\n            {(searchTerm || statusFilter !== 'all' || membershipFilter !== 'all' || regionFilter !== 'all') && (\n              <button\n                onClick={() => {\n                  setSearchTerm('');\n                  setStatusFilter('all');\n                  setMembershipFilter('all');\n                  setRegionFilter('all');\n                }}\n                className=\"inline-flex items-center space-x-2 px-4 py-2 text-sm font-medium text-red-600 bg-red-50 border border-red-200 rounded-md hover:bg-red-100 hover:border-red-300 transition-colors\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n                <span>Clear Filters</span>\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg\">\n            {error}\n          </div>\n        )}\n\n        {/* Summary Cards */}\n        {loading ? (\n          <SummaryCardsSkeleton />\n        ) : (\n          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6\">\n            {/* Total Brokers Card */}\n            <div className=\"bg-teal-50 rounded-lg p-6 border border-teal-200\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-teal-600 text-sm font-medium\">Total Brokers</p>\n                  <p className=\"text-2xl font-bold text-teal-700\">{brokerStats.total}</p>\n                </div>\n                <div className=\"bg-teal-100 rounded-lg p-3\">\n                  <svg className=\"w-6 h-6 text-teal-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n\n            {/* Unblocked Brokers Card */}\n            <div className=\"bg-green-50 rounded-lg p-6 border border-green-200\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-green-600 text-sm font-medium\">Unblocked</p>\n                  <p className=\"text-2xl font-bold text-green-700\">{brokerStats.unblocked}</p>\n                </div>\n                <div className=\"bg-green-100 rounded-lg p-3\">\n                  <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n\n            {/* Disabled Brokers Card */}\n            <div className=\"bg-red-50 rounded-lg p-6 border border-red-200\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-red-600 text-sm font-medium\">Blocked</p>\n                  <p className=\"text-2xl font-bold text-red-600\">{brokerStats.blocked}</p>\n                </div>\n                <div className=\"bg-red-100 rounded-lg p-3\">\n                  <svg className=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zM5 19L19 5\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Add Broker Modal */}\n        {showAddModal && (\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n            <div className=\"absolute inset-0 bg-black/50\" onClick={() => setShowAddModal(false)} />\n            <div className=\"relative bg-white w-full max-w-lg mx-4 rounded-xl border border-gray-200 shadow-2xl p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Add Broker</h3>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Name</label>\n                  <input\n                    value={newBroker.name}\n                    onChange={(e) => setNewBroker({ ...newBroker, name: e.target.value })}\n                    className=\"w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    placeholder=\"Enter name\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                  <input\n                    type=\"email\"\n                    value={newBroker.email}\n                    onChange={(e) => setNewBroker({ ...newBroker, email: e.target.value })}\n                    className=\"w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    placeholder=\"Enter email\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700  mb-1\">Phone</label>\n                  <input\n                    value={newBroker.phone}\n                    onChange={(e) => setNewBroker({ ...newBroker, phone: e.target.value })}\n                    className=\"w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    placeholder=\"Enter phone\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-end gap-3 pt-2\">\n                  <button\n                    onClick={() => setShowAddModal(false)}\n                    className=\"px-5 py-2 rounded-md border bg-gray-200 border-gray-300 text-gray-700 hover:bg-gray-50\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={async () => {\n                      try {\n                        setError('');\n                        console.log('Creating broker:', newBroker);\n                        \n                        // Basic required validation\n                        if (!newBroker.name.trim() || !newBroker.email.trim() || !newBroker.phone.trim()) {\n                          setError('Please fill in all fields');\n                          toast.error('Please fill in all fields');\n                          return;\n                        }\n\n                        // Phone validation: exactly 10 digits\n                        const phoneOnlyDigits = newBroker.phone.replace(/\\D/g, '');\n                        if (!/^\\d{10}$/.test(phoneOnlyDigits)) {\n                          toast.error('Phone must be exactly 10 digits');\n                          return;\n                        }\n\n                        // Email validation (simple)\n                        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                        if (!emailRegex.test(newBroker.email.trim())) {\n                          toast.error('Please enter a valid email');\n                          return;\n                        }\n\n                        // Duplicate checks against current list\n                        const normalizedPhone = phoneOnlyDigits;\n                        const phoneExists = brokers.some(b => (b.phone || '').replace(/\\D/g, '') === normalizedPhone);\n                        if (phoneExists) {\n                          toast.error(`Phone already exists: ${newBroker.phone}`);\n                          return;\n                        }\n\n                        const emailExists = brokers.some(b => (b.email || '').toLowerCase() === newBroker.email.trim().toLowerCase());\n                        if (emailExists) {\n                          toast.error(`Email already exists: ${newBroker.email}`);\n                          return;\n                        }\n                        \n                        // Call API to create broker\n                        const response = await brokerAPI.createBroker(\n                          newBroker.name.trim(),\n                          newBroker.email.trim(),\n                          newBroker.phone.trim()\n                        );\n                        \n                        console.log('Broker created successfully:', response);\n                        toast.success('Broker created successfully');\n                        \n                        // Close modal and reset form\n                        setShowAddModal(false);\n                        setNewBroker({ name: '', email: '', phone: '' });\n                        \n                        // Refresh the brokers list\n                        await fetchBrokers();\n                        \n                      } catch (err) {\n                        console.error('Error creating broker:', err);\n                        const message = err instanceof Error ? err.message : 'Failed to create broker';\n                        setError(message);\n                        toast.error(message);\n                      }\n                    }}\n                    className=\"px-5 py-2 rounded-md bg-blue-600 text-white hover:bg-blue-700\"\n                  >\n                    Create\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Brokers Table */}\n        {loading ? (\n          <BrokersTableSkeleton />\n        ) : (\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n            {filteredBrokers.length === 0 ? (\n            <div className=\"p-12 text-center\">\n              <svg className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n              </svg>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No brokers found</h3>\n              <p className=\"text-gray-500\">Try adjusting your search or filter criteria.</p>\n            </div>\n          ) : (\n            <>\n              {/* Table Header */}\n              <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-200\">\n                <div className=\"grid grid-cols-6 gap-4 text-xs font-semibold text-gray-600 uppercase tracking-wide\">\n                  <div>Name</div>\n                  <div>Contact</div>\n                  <div>Region</div>\n                  <div>Membership</div>\n                  <div>Numbers</div>\n                  <div>Action</div>\n                </div>\n              </div>\n\n              {/* Table Body */}\n              <div className=\"divide-y divide-gray-200\">\n                {filteredBrokers.map((broker, index) => {\n                  const sampleData = getSampleData(broker, index);\n                  return (\n                    <div key={broker._id} className=\"px-6 py-4 hover:bg-gray-50 transition-colors\">\n                      <div className=\"grid grid-cols-6 gap-4 items-center\">\n                        {/* Name Column */}\n                        <div className=\"flex items-center space-x-3\">\n                          <Link href={`/brokers/${broker.userId}`} className=\"cursor-pointer\">\n                            <img\n                              className=\"h-10 w-10 rounded-full object-cover hover:opacity-80 transition-opacity\"\n                              src={getBrokerImageUrl(broker.brokerImage)}\n                              alt={broker.name || 'Broker'}\n                              onError={(e) => {\n                                e.currentTarget.src = \"https://www.w3schools.com/howto/img_avatar.png\";\n                              }}\n                            />\n                          </Link>\n                          <div>\n                            <Link \n                              href={`/brokers/${broker.userId}`}\n                              className=\"text-sm font-semibold text-gray-900 hover:text-teal-600 transition-colors cursor-pointer capitalize\"\n                            >\n                              {broker.name || 'N/A'}\n                            </Link>\n                            <div className=\"text-gray-500 text-xs capitalize\">{broker.firmName || 'N/A'}</div>\n                          </div>\n                        </div>\n\n                        {/* Contact Column */}\n                        <div className=\"text-sm text-gray-900\">\n                          <div className=\"flex items-center space-x-1\">\n                            <svg className=\"w-4 h-4 text-gray-700 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n                            </svg>\n                            <span className=\"font-semibold text-gray-900\">{broker.phone || 'N/A'}</span>\n                            {broker.phone && (\n                              <svg className=\"w-3 h-3 text-teal-600 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                              </svg>\n                            )}\n                          </div>\n                          <div className=\"flex items-center space-x-1\">\n                            <svg className=\"w-4 h-4 text-gray-700 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                            </svg>\n                            <span className=\"text-gray-500 text-xs truncate\">{broker.email || 'N/A'}</span>\n                            {broker.email && (\n                              <svg className=\"w-3 h-3 text-teal-600 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                              </svg>\n                            )}\n                          </div>\n                        </div>\n\n                        {/* Region Column */}\n                        <div className=\"text-sm text-gray-900\">\n                          {broker.region && broker.region.length > 0 ? (\n                            <div>\n                              <div className=\"font-semibold text-gray-900\">{broker.region[0].name}</div>\n                              <div className=\"text-gray-500 text-xs\">{broker.region[0].city}, {broker.region[0].state}</div>\n                            </div>\n                          ) : (\n                            'N/A'\n                          )}\n                        </div>\n\n                        {/* Membership Column */}\n                        <div>\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                            broker.membership === 'premium'\n                              ? 'bg-teal-100 text-teal-800' \n                              : broker.membership === 'standard'\n                              ? 'bg-blue-100 text-blue-800'\n                              : broker.membership === 'basic'\n                              ? 'bg-gray-100 text-gray-800'\n                              : 'bg-gray-100 text-gray-800'\n                          }`}>\n                            {broker.membership ? broker.membership.charAt(0).toUpperCase() + broker.membership.slice(1) : 'N/A'}\n                          </span>\n                        </div>\n\n                        {/* Numbers Column */}\n                        <div className=\"text-sm\">\n                          <div className=\"capitalize text-gray-500\">{sampleData.leads} leads</div>\n                          <div className=\"text-gray-500 text-xs capitalize\">{sampleData.properties} properties</div>\n                        </div>\n\n                        {/* Action Column */}\n                        <div>\n                          {(() => {\n                            if (broker.approvedByAdmin === 'unblocked') {\n                              return (\n                                <button \n                                  onClick={() => handleBlockClick(broker._id, broker.name || 'Broker')}\n                                  className=\"inline-flex items-center space-x-1 px-3 py-1.5 rounded text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors text-sm\"\n                                >\n                                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zM5 19L19 5\" />\n                                  </svg>\n                                  <span>Block</span>\n                                </button>\n                              );\n                            } else if (broker.approvedByAdmin === 'blocked') {\n                              return (\n                                <button \n                                  onClick={() => handleUnblockClick(broker._id, broker.name || 'Broker')}\n                                  className=\"inline-flex items-center space-x-1 px-3 py-1.5 rounded text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors text-sm\"\n                                >\n                                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                  </svg>\n                                  <span>Unblock</span>\n                                </button>\n                              );\n                            } else {\n                              // Default to unblocked if status is undefined - show block button\n                              return (\n                                <button \n                                  onClick={() => handleBlockClick(broker._id, broker.name || 'Broker')}\n                                  className=\"inline-flex items-center space-x-1 px-3 py-1.5 rounded text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors text-sm\"\n                                >\n                                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zM5 19L19 5\" />\n                                  </svg>\n                                  <span>Block</span>\n                                </button>\n                              );\n                            }\n                          })()}\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </>\n            )}\n          </div>\n        )}\n\n        {/* Pagination */}\n        {totalBrokers > 0 && (\n          <div className=\"bg-white px-6 py-4 border-t border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center text-sm text-gray-700\">\n                <span>\n                  Showing {((currentPage - 1) * 10) + 1} to {Math.min(currentPage * 10, totalBrokers)} of {totalBrokers} results\n                </span>\n              </div>\n              <ReactPaginate\n                pageCount={totalPages}\n                pageRangeDisplayed={3}\n                marginPagesDisplayed={1}\n                onPageChange={({ selected }) => setCurrentPage(selected + 1)}\n                forcePage={currentPage - 1}\n                previousLabel=\"Previous\"\n                nextLabel=\"Next\"\n                breakLabel=\"...\"\n                containerClassName=\"flex items-center space-x-1\"\n                pageClassName=\"px-3 py-2 text-sm font-medium rounded-md cursor-pointer text-gray-500 bg-white border border-gray-300 hover:bg-gray-50 transition-colors\"\n                activeClassName=\"!bg-blue-600 !text-white !border-blue-600\"\n                previousClassName=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer transition-colors\"\n                nextClassName=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer transition-colors\"\n                breakClassName=\"px-3 py-2 text-sm font-medium text-gray-500\"\n                disabledClassName=\"opacity-50 cursor-not-allowed\"\n                renderOnZeroPageCount={null}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Block Confirmation Dialog */}\n        {showBlockConfirm && (\n          <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-[rgba(0,0,0,0.8)]\">\n            <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4 shadow-2xl\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"flex-shrink-0 w-10 h-10 mx-auto bg-red-100 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                  </svg>\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Block Broker</h3>\n                <p className=\"text-sm text-gray-500 mb-6\">\n                  Are you sure you want to block <span className=\"font-semibold\">{selectedBrokerName}</span>? \n                  This will prevent them from accessing the platform.\n                </p>\n                <div className=\"flex space-x-3 justify-center\">\n                  <button\n                    onClick={() => {\n                      setShowBlockConfirm(false);\n                      setSelectedBrokerId(null);\n                      setSelectedBrokerName('');\n                    }}\n                    className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleBlock}\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                  >\n                    Block Broker\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Unblock Confirmation Dialog */}\n        {showUnblockConfirm && (\n          <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-[rgba(0,0,0,0.8)]\" >\n            <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4 shadow-2xl\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"flex-shrink-0 w-10 h-10 mx-auto bg-green-100 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Unblock Broker</h3>\n                <p className=\"text-sm text-gray-500 mb-6\">\n                  Are you sure you want to unblock <span className=\"font-semibold\">{selectedBrokerName}</span>? \n                  This will restore their access to the platform.\n                </p>\n                <div className=\"flex space-x-3 justify-center\">\n                  <button\n                    onClick={() => {\n                      setShowUnblockConfirm(false);\n                      setSelectedBrokerId(null);\n                      setSelectedBrokerName('');\n                    }}\n                    className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleUnblock}\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-green-600 border border-transparent rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n                  >\n                    Unblock Broker\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        </div>\n      </Layout>\n    </ProtectedRoute>\n  );\n}"],"names":[],"mappings":"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"}