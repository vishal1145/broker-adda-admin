{"version":3,"sources":["turbopack:///[project]/src/app/brokers/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport Link from 'next/link';\r\nimport Layout from '@/components/Layout';\r\nimport { brokerAPI } from '@/services/api';\r\nimport Select from 'react-select';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\ninterface Broker {\r\n  _id: string;\r\n  userId: string;\r\n  firmName: string;\r\n  region: Array<{\r\n    _id: string;\r\n    name: string;\r\n    description: string;\r\n    state: string;\r\n    city: string;\r\n    centerLocation: string;\r\n    radius: number;\r\n  }>;\r\n  regionId: string | null;\r\n  status: string;\r\n  approvedByAdmin: string | boolean;\r\n  kycDocs: {\r\n    aadhar: string;\r\n    pan: string;\r\n    gst: string;\r\n  };\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  __v: number;\r\n  // Optional fields that might be populated\r\n  name?: string;\r\n  email?: string;\r\n  phone?: string;\r\n  address?: string;\r\n  accreditedBy?: string;\r\n  licenseNumber?: string;\r\n  expertiseField?: string;\r\n  state?: string;\r\n  brokerImage?: string;\r\n}\r\n\r\n// Skeleton Loader Components\r\nconst Skeleton = ({ className = '', height = 'h-4', width = 'w-full', rounded = false }: { className?: string; height?: string; width?: string; rounded?: boolean }) => (\r\n  <div \r\n    className={`bg-gray-200 animate-pulse ${height} ${width} ${rounded ? 'rounded-full' : 'rounded'} ${className}`}\r\n  />\r\n);\r\n\r\nconst BrokersTableSkeleton = () => {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\r\n      {/* Table Header Skeleton */}\r\n      <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-200\">\r\n        <div className=\"grid grid-cols-6 gap-4\">\r\n          <Skeleton height=\"h-4\" width=\"w-16\" />\r\n          <Skeleton height=\"h-4\" width=\"w-20\" />\r\n          <Skeleton height=\"h-4\" width=\"w-16\" />\r\n          <Skeleton height=\"h-4\" width=\"w-24\" />\r\n          <Skeleton height=\"h-4\" width=\"w-20\" />\r\n          <Skeleton height=\"h-4\" width=\"w-16\" />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Table Body Skeleton */}\r\n      <div className=\"divide-y divide-gray-200\">\r\n        {Array.from({ length: 5 }).map((_, index) => (\r\n          <div key={index} className=\"px-6 py-4\">\r\n            <div className=\"grid grid-cols-6 gap-4 items-center\">\r\n              {/* Name Column Skeleton */}\r\n              <div className=\"flex items-center space-x-3\">\r\n                <Skeleton height=\"h-10\" width=\"w-10\" rounded />\r\n                <div className=\"space-y-2\">\r\n                  <Skeleton height=\"h-4\" width=\"w-24\" />\r\n                  <Skeleton height=\"h-3\" width=\"w-32\" />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Contact Column Skeleton */}\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Skeleton height=\"h-4\" width=\"w-4\" />\r\n                  <Skeleton height=\"h-4\" width=\"w-20\" />\r\n                  <Skeleton height=\"h-3\" width=\"w-3\" />\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Skeleton height=\"h-4\" width=\"w-4\" />\r\n                  <Skeleton height=\"h-3\" width=\"w-28\" />\r\n                  <Skeleton height=\"h-3\" width=\"w-3\" />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Region Column Skeleton */}\r\n              <div className=\"space-y-2\">\r\n                <Skeleton height=\"h-4\" width=\"w-20\" />\r\n                <Skeleton height=\"h-3\" width=\"w-24\" />\r\n              </div>\r\n\r\n              {/* Membership Column Skeleton */}\r\n              <div>\r\n                <Skeleton height=\"h-6\" width=\"w-16\" rounded />\r\n              </div>\r\n\r\n              {/* Numbers Column Skeleton */}\r\n              <div className=\"space-y-1\">\r\n                <Skeleton height=\"h-4\" width=\"w-16\" />\r\n                <Skeleton height=\"h-3\" width=\"w-20\" />\r\n              </div>\r\n\r\n              {/* Action Column Skeleton */}\r\n              <div className=\"flex space-x-2\">\r\n                <Skeleton height=\"h-7\" width=\"w-16\" rounded />\r\n                <Skeleton height=\"h-7\" width=\"w-16\" rounded />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SummaryCardsSkeleton = () => {\r\n  return (\r\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n      {Array.from({ length: 4 }).map((_, index) => (\r\n        <div key={index} className=\"bg-gray-50 rounded-lg p-6 border border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-2\">\r\n              <Skeleton height=\"h-4\" width=\"w-20\" />\r\n              <Skeleton height=\"h-8\" width=\"w-12\" />\r\n            </div>\r\n            <div className=\"bg-gray-100 rounded-lg p-3\">\r\n              <Skeleton height=\"h-6\" width=\"w-6\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function BrokersPage() {\r\n  const [brokers, setBrokers] = useState<Broker[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('all');\r\n  const [membershipFilter, setMembershipFilter] = useState('all');\r\n  const [regionFilter, setRegionFilter] = useState('all');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [totalBrokers, setTotalBrokers] = useState(0);\r\n\r\n  // Calculate broker statistics\r\n  const brokerStats = {\r\n    total: brokers.length,\r\n    pending: brokers.filter(broker => {\r\n      const status = broker.approvedByAdmin;\r\n      return status === 'pending' || status === undefined || status === null || status === false;\r\n    }).length,\r\n    approved: brokers.filter(broker => broker.approvedByAdmin === 'approved' || broker.approvedByAdmin === true).length,\r\n    rejected: brokers.filter(broker => broker.approvedByAdmin === 'rejected').length\r\n  };\r\n\r\n  // Fetch brokers from API\r\n  const fetchBrokers = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n\r\n      console.log('🔄 Fetching brokers with statusFilter:', statusFilter);\r\n      const approvedByAdmin = statusFilter === 'approved' ? true : statusFilter === 'pending' ? false : undefined;\r\n      const response = await brokerAPI.getBrokers(currentPage, 10, approvedByAdmin);\r\n      \r\n      console.log('📊 API Response:', response); // Debug log\r\n      console.log('📊 Brokers data:', response.data.brokers);\r\n      \r\n      // Debug each broker's approvedByAdmin value\r\n      if (response.data.brokers) {\r\n        response.data.brokers.forEach((broker: Broker, index: number) => {\r\n          console.log(`📊 Broker ${index + 1}:`, {\r\n            _id: broker._id,\r\n            name: broker.name,\r\n            approvedByAdmin: broker.approvedByAdmin,\r\n            type: typeof broker.approvedByAdmin\r\n          });\r\n        });\r\n      }\r\n      \r\n      setBrokers(response.data.brokers || []);\r\n      setTotalPages(response.data.pagination.totalPages || 1);\r\n      setTotalBrokers(response.data.pagination.totalBrokers || 0);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch brokers');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [currentPage, statusFilter]);\r\n\r\n  // Handle broker approval\r\n  const handleApprove = async (brokerId: string) => {\r\n    try {\r\n      setError('');\r\n      console.log('🟢 Approving broker with ID:', brokerId);\r\n      const response = await brokerAPI.approveBroker(brokerId);\r\n      console.log('🟢 Approve API response:', response);\r\n      \r\n      // Update local state immediately\r\n      setBrokers(prevBrokers => \r\n        prevBrokers.map(broker => \r\n          broker._id === brokerId \r\n            ? { ...broker, approvedByAdmin: 'approved' }\r\n            : broker\r\n        )\r\n      );\r\n      \r\n      // Also refresh from API to get any other updates\r\n      await fetchBrokers();\r\n    } catch (err) {\r\n      console.error('🟢 Approve error:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to approve broker');\r\n    }\r\n  };\r\n\r\n  // Handle broker rejection\r\n  const handleReject = async (brokerId: string) => {\r\n    try {\r\n      setError('');\r\n      console.log('🔴 Rejecting broker with ID:', brokerId);\r\n      const response = await brokerAPI.rejectBroker(brokerId);\r\n      console.log('🔴 Reject API response:', response);\r\n      \r\n      // Update local state immediately\r\n      setBrokers(prevBrokers => \r\n        prevBrokers.map(broker => \r\n          broker._id === brokerId \r\n            ? { ...broker, approvedByAdmin: 'rejected' }\r\n            : broker\r\n        )\r\n      );\r\n      \r\n      // Also refresh from API to get any other updates\r\n      await fetchBrokers();\r\n    } catch (err) {\r\n      console.error('🔴 Reject error:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to reject broker');\r\n    }\r\n  };\r\n\r\n  // Filter brokers based on search term and filters\r\n  const filteredBrokers = brokers.filter(broker => {\r\n    // Search term filter\r\n    const matchesSearch = (broker.name || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      (broker.email || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      (broker.phone || '').includes(searchTerm) ||\r\n      broker.firmName.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n    // Membership filter (hardcoded for now - all show as Premium)\r\n    const matchesMembership = membershipFilter === 'all' || membershipFilter === 'premium';\r\n\r\n    // Region filter\r\n    const matchesRegion = regionFilter === 'all' || \r\n      (broker.region && broker.region.length > 0 && \r\n       broker.region[0].name.toLowerCase().includes(regionFilter.toLowerCase()));\r\n\r\n    return matchesSearch && matchesMembership && matchesRegion;\r\n  });\r\n\r\n\r\n  // Fetch brokers when component mounts or filters change\r\n  useEffect(() => {\r\n    fetchBrokers();\r\n  }, [fetchBrokers]);\r\n\r\n  // Reset to page 1 when filters change\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [statusFilter, membershipFilter, regionFilter]);\r\n\r\n  // Helper functions\r\n\r\n\r\n\r\n\r\n\r\n  // Use image URL with proxy for external URLs to avoid CORS issues\r\n  const getBrokerImageUrl = (brokerImage: string | undefined) => {\r\n    console.log('🖼️ getBrokerImageUrl called with:', brokerImage);\r\n    \r\n    if (!brokerImage) {\r\n      console.log('🖼️ No broker image, using fallback');\r\n      return \"https://www.w3schools.com/howto/img_avatar.png\";\r\n    }\r\n    \r\n    // If it's an external URL (not localhost), use the proxy\r\n    if (brokerImage.includes('broker-adda-be.algofolks.com') || \r\n        brokerImage.includes('https://') || \r\n        (brokerImage.includes('http://') && !brokerImage.includes('localhost'))) {\r\n      const proxyUrl = `/api/image-proxy?url=${encodeURIComponent(brokerImage)}`;\r\n      console.log('🖼️ Using proxy URL:', proxyUrl);\r\n      return proxyUrl;\r\n    }\r\n    \r\n    // For localhost URLs, return directly\r\n    console.log('🖼️ Using direct URL:', brokerImage);\r\n    return brokerImage;\r\n  };\r\n\r\n  // Generate consistent sample data for demonstration\r\n  const getSampleData = (broker: Broker, index: number) => {\r\n    const sampleData = [\r\n      { leads: 4, properties: 2, membership: 'Premium' },\r\n      { leads: 8, properties: 5, membership: 'Premium' },\r\n      { leads: 3, properties: 7, membership: 'Standard' },\r\n      { leads: 9, properties: 1, membership: 'Premium' },\r\n      { leads: 6, properties: 4, membership: 'Standard' },\r\n      { leads: 2, properties: 8, membership: 'Premium' },\r\n      { leads: 7, properties: 3, membership: 'Standard' }\r\n    ];\r\n    \r\n    return sampleData[index % sampleData.length];\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"space-y-6\">\r\n        {/* Page Header */}\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex items-center\">\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Brokers</h1>\r\n            \r\n          </div>\r\n          <p className=\"text-gray-500 mt-1 text-sm\">View and manage all registered brokers</p>\r\n        </div>\r\n\r\n        {/* Search and Filter Bar */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0 mb-6\">\r\n          {/* Search Bar */}\r\n          <div className=\"flex-1 max-w-md\">\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <svg className=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                </svg>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by Firm Name, Contact, Region\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filter Buttons */}\r\n          <div className=\"flex flex-wrap items-center gap-2\">\r\n            {/* Broker Status Dropdown */}\r\n            <div className=\"relative\">\r\n              <select\r\n                value={statusFilter}\r\n                onChange={(e) => setStatusFilter(e.target.value)}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 appearance-none pr-8\"\r\n              >\r\n                <option value=\"all\">All Brokers</option>\r\n                <option value=\"approved\">Approved</option>\r\n                <option value=\"rejected\">Rejected</option>\r\n                <option value=\"pending\">Pending</option>\r\n              </select>\r\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n                <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            {/* Membership Dropdown */}\r\n            <div className=\"relative\">\r\n              <select\r\n                value={membershipFilter}\r\n                onChange={(e) => setMembershipFilter(e.target.value)}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 appearance-none pr-8\"\r\n              >\r\n                <option value=\"all\">All Membership</option>\r\n                <option value=\"premium\">Premium</option>\r\n                <option value=\"standard\">Standard</option>\r\n                <option value=\"basic\">Basic</option>\r\n              </select>\r\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n                <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            {/* Region Dropdown */}\r\n            <div className=\"relative\">\r\n              <select\r\n                value={regionFilter}\r\n                onChange={(e) => setRegionFilter(e.target.value)}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 appearance-none pr-8\"\r\n              >\r\n                <option value=\"all\">All Regions</option>\r\n                <option value=\"mumbai\">Mumbai</option>\r\n                <option value=\"delhi\">Delhi</option>\r\n                <option value=\"bangalore\">Bangalore</option>\r\n                <option value=\"hyderabad\">Hyderabad</option>\r\n                <option value=\"pune\">Pune</option>\r\n                <option value=\"agra\">Agra</option>\r\n                <option value=\"noida\">Noida</option>\r\n                <option value=\"lucknow\">Lucknow</option>\r\n                <option value=\"chennai\">Chennai</option>\r\n              </select>\r\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n                <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={() => {\r\n                setSearchTerm('');\r\n                setStatusFilter('all');\r\n                setMembershipFilter('all');\r\n                setRegionFilter('all');\r\n              }}\r\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 transition-colors\"\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Error Message */}\r\n        {error && (\r\n          <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Summary Cards */}\r\n        {loading ? (\r\n          <SummaryCardsSkeleton />\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n            {/* Total Brokers Card */}\r\n            <div className=\"bg-teal-50 rounded-lg p-6 border border-teal-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-teal-600 text-sm font-medium\">Total Brokers</p>\r\n                  <p className=\"text-2xl font-bold text-teal-700\">{brokerStats.total}</p>\r\n                </div>\r\n                <div className=\"bg-teal-100 rounded-lg p-3\">\r\n                  <svg className=\"w-6 h-6 text-teal-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Pending Brokers Card */}\r\n            <div className=\"bg-yellow-50 rounded-lg p-6 border border-yellow-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-gray-800 text-sm font-medium\">Pending</p>\r\n                  <p className=\"text-2xl font-bold text-gray-800\">{brokerStats.pending}</p>\r\n                </div>\r\n                <div className=\"bg-yellow-100 rounded-lg p-3\">\r\n                  <svg className=\"w-6 h-6 text-gray-800\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Approved Brokers Card */}\r\n            <div className=\"bg-green-50 rounded-lg p-6 border border-green-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-gray-800 text-sm font-medium\">Approved</p>\r\n                  <p className=\"text-2xl font-bold text-gray-800\">{brokerStats.approved}</p>\r\n                </div>\r\n                <div className=\"bg-green-100 rounded-lg p-3\">\r\n                  <svg className=\"w-6 h-6 text-gray-800\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Rejected Brokers Card */}\r\n            <div className=\"bg-red-50 rounded-lg p-6 border border-red-200\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-red-600 text-sm font-medium\">Rejected</p>\r\n                  <p className=\"text-2xl font-bold text-red-600\">{brokerStats.rejected}</p>\r\n                </div>\r\n                <div className=\"bg-red-100 rounded-lg p-3\">\r\n                  <svg className=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Brokers Table */}\r\n        {loading ? (\r\n          <BrokersTableSkeleton />\r\n        ) : (\r\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\r\n            {filteredBrokers.length === 0 ? (\r\n            <div className=\"p-12 text-center\">\r\n              <svg className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n              </svg>\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No brokers found</h3>\r\n              <p className=\"text-gray-500\">Try adjusting your search or filter criteria.</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* Table Header */}\r\n              <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-200\">\r\n                <div className=\"grid grid-cols-6 gap-4 text-xs font-semibold text-gray-600 uppercase tracking-wide\">\r\n                  <div>Name</div>\r\n                  <div>Contact</div>\r\n                  <div>Region</div>\r\n                  <div>Membership</div>\r\n                  <div>Numbers</div>\r\n                  <div>Action</div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Table Body */}\r\n              <div className=\"divide-y divide-gray-200\">\r\n                {filteredBrokers.map((broker, index) => {\r\n                  const sampleData = getSampleData(broker, index);\r\n                  return (\r\n                    <div key={broker._id} className=\"px-6 py-4 hover:bg-gray-50 transition-colors\">\r\n                      <div className=\"grid grid-cols-6 gap-4 items-center\">\r\n                        {/* Name Column */}\r\n                        <div className=\"flex items-center space-x-3\">\r\n                          <Link href={`/brokers/${broker._id}`} className=\"cursor-pointer\">\r\n                            <img\r\n                              className=\"h-10 w-10 rounded-full object-cover hover:opacity-80 transition-opacity\"\r\n                              src={getBrokerImageUrl(broker.brokerImage)}\r\n                              alt={broker.name || 'Broker'}\r\n                              onError={(e) => {\r\n                                e.currentTarget.src = \"https://www.w3schools.com/howto/img_avatar.png\";\r\n                              }}\r\n                            />\r\n                          </Link>\r\n                          <div>\r\n                            <Link \r\n                              href={`/brokers/${broker._id}`}\r\n                              className=\"text-sm font-semibold text-gray-900 hover:text-teal-600 transition-colors cursor-pointer\"\r\n                            >\r\n                              {broker.name || 'N/A'}\r\n                            </Link>\r\n                            <div className=\"text-gray-500 text-xs\">{broker.firmName || 'N/A'}</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Contact Column */}\r\n                        <div className=\"text-sm text-gray-900\">\r\n                          <div className=\"flex items-center space-x-1\">\r\n                            <svg className=\"w-4 h-4 text-gray-700 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\r\n                            </svg>\r\n                            <span className=\"font-semibold text-gray-900\">{broker.phone || 'N/A'}</span>\r\n                            {broker.phone && (\r\n                              <svg className=\"w-3 h-3 text-teal-600 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\r\n                              </svg>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"flex items-center space-x-1\">\r\n                            <svg className=\"w-4 h-4 text-gray-700 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                            </svg>\r\n                            <span className=\"text-gray-500 text-xs truncate\">{broker.email || 'N/A'}</span>\r\n                            {broker.email && (\r\n                              <svg className=\"w-3 h-3 text-teal-600 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\r\n                              </svg>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Region Column */}\r\n                        <div className=\"text-sm text-gray-900\">\r\n                          {broker.region && broker.region.length > 0 ? (\r\n                            <div>\r\n                              <div className=\"font-semibold text-gray-900\">{broker.region[0].name}</div>\r\n                              <div className=\"text-gray-500 text-xs\">{broker.region[0].city}, {broker.region[0].state}</div>\r\n                            </div>\r\n                          ) : (\r\n                            'N/A'\r\n                          )}\r\n                        </div>\r\n\r\n                        {/* Membership Column */}\r\n                        <div>\r\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n                            sampleData.membership === 'Premium'\r\n                              ? 'bg-teal-100 text-teal-800' \r\n                              : 'bg-gray-100 text-gray-800'\r\n                          }`}>\r\n                            {sampleData.membership}\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* Numbers Column */}\r\n                        <div className=\"text-sm\">\r\n                          <div className=\"font-semibold text-gray-900\">{sampleData.leads} leads</div>\r\n                          <div className=\"text-gray-500 text-xs\">{sampleData.properties} properties</div>\r\n                        </div>\r\n\r\n                        {/* Action Column */}\r\n                        <div>\r\n                          {(() => {\r\n                            if (broker.approvedByAdmin === 'approved' || broker.approvedByAdmin === true) {\r\n                              return (\r\n                                <span className=\"inline-flex items-center px-2.5 py-1 text-xs font-medium rounded-full bg-teal-100 text-teal-800\">\r\n                                  Approved\r\n                                </span>\r\n                              );\r\n                            } else if (broker.approvedByAdmin === 'rejected') {\r\n                              return (\r\n                                <span className=\"inline-flex items-center px-2.5 py-1 text-xs font-medium rounded-full bg-red-100 text-red-800\">\r\n                                  Rejected\r\n                                </span>\r\n                              );\r\n                            } else {\r\n                              return (\r\n                                <div className=\"flex space-x-2\">\r\n                                  <button \r\n                                    onClick={() => handleApprove(broker._id)}\r\n                                    className=\"inline-flex items-center px-3 py-1.5 text-xs font-medium rounded text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500 transition-colors\"\r\n                                  >\r\n                                    Approve\r\n                                  </button>\r\n                                  <button \r\n                                    onClick={() => handleReject(broker._id)}\r\n                                    className=\"inline-flex items-center px-3 py-1.5 text-xs font-medium rounded text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors\"\r\n                                  >\r\n                                    Reject\r\n                                  </button>\r\n                                </div>\r\n                              );\r\n                            }\r\n                          })()}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Pagination */}\r\n        {totalBrokers > 0 && (\r\n          <div className=\"bg-white px-6 py-4 border-t border-gray-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center text-sm text-gray-700\">\r\n                <span>\r\n                  Showing {((currentPage - 1) * 10) + 1} to {Math.min(currentPage * 10, totalBrokers)} of {totalBrokers} results\r\n                </span>\r\n              </div>\r\n              <ReactPaginate\r\n                pageCount={totalPages}\r\n                pageRangeDisplayed={3}\r\n                marginPagesDisplayed={1}\r\n                onPageChange={({ selected }) => setCurrentPage(selected + 1)}\r\n                forcePage={currentPage - 1}\r\n                previousLabel=\"Previous\"\r\n                nextLabel=\"Next\"\r\n                breakLabel=\"...\"\r\n                containerClassName=\"flex items-center space-x-1\"\r\n                pageClassName=\"px-3 py-2 text-sm font-medium rounded-md cursor-pointer text-gray-500 bg-white border border-gray-300 hover:bg-gray-50 transition-colors\"\r\n                activeClassName=\"bg-blue-600 text-white border-blue-600\"\r\n                previousClassName=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer transition-colors\"\r\n                nextClassName=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer transition-colors\"\r\n                breakClassName=\"px-3 py-2 text-sm font-medium text-gray-500\"\r\n                disabledClassName=\"opacity-50 cursor-not-allowed\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}"],"names":[],"mappings":"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"}