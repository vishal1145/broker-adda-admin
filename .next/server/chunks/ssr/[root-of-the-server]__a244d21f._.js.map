{"version":3,"sources":["turbopack:///[project]/Desktop/Broker adda/broker-adda-admin/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts","turbopack:///[project]/Desktop/Broker adda/broker-adda-admin/node_modules/next/src/server/route-modules/app-page/vendored/contexts/app-router-context.ts","turbopack:///[project]/Desktop/Broker adda/broker-adda-admin/node_modules/next/src/server/route-modules/app-page/vendored/contexts/hooks-client-context.ts","turbopack:///[project]/Desktop/Broker adda/broker-adda-admin/node_modules/next/src/server/route-modules/app-page/vendored/contexts/server-inserted-html.ts","turbopack:///[project]/Desktop/Broker adda/broker-adda-admin/node_modules/next/src/server/route-modules/app-page/module.compiled.js","turbopack:///[project]/Desktop/Broker adda/broker-adda-admin/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts","turbopack:///[project]/Desktop/Broker adda/broker-adda-admin/src/components/Layout.tsx","turbopack:///[project]/Desktop/Broker adda/broker-adda-admin/src/services/api.ts","turbopack:///[project]/Desktop/Broker adda/broker-adda-admin/src/app/regions/page.tsx"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].AppRouterContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].HooksClientContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].ServerInsertedHtml\n","if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n","'use client';\n\nimport { usePathname } from 'next/navigation';\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  const pathname = usePathname();\n\n  return (\n    <div className=\"h-screen flex overflow-hidden bg-white\">\n      {/* Sidebar completely hidden */}\n      {/* <Sidebar sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} /> */}\n\n      {/* Main content */}\n      <div className=\"flex flex-col w-full overflow-hidden\">\n        {/* Top bar */}\n        <div className=\"relative z-10 flex-shrink-0 flex h-16 bg-white shadow-sm border-b border-gray-200\">\n          {/* Region Tabs */}\n          <div className=\"flex items-center px-8 space-x-8\">\n            <a\n              href=\"/brokers\"\n              className={`text-sm font-medium transition-colors border-b-2 ${\n                pathname === '/brokers'\n                  ? 'text-primary border-primary'\n                  : 'text-gray-700 hover:text-primary border-transparent hover:border-primary'\n              }`}\n            >\n              Brokers\n            </a>\n            <a\n              href=\"/regions\"\n              className={`text-sm font-medium transition-colors border-b-2 ${\n                pathname === '/regions'\n                  ? 'text-primary border-primary'\n                  : 'text-gray-700 hover:text-primary border-transparent hover:border-primary'\n              }`}\n            >\n              Regions\n            </a>\n          </div>\n          \n          <div className=\"flex-1 px-10 flex justify-end items-center\">\n  <div className=\"flex items-center space-x-4\">\n   \n    {/* User Profile */}\n    <div className=\"flex items-center\">\n      \n      <div className=\"ml-3\">\n        <p className=\"text-sm font-medium text-gray-900\">Rohit Tyagi</p>\n        <p className=\"text-xs text-gray-500\">Admin</p>\n      </div>\n      <button className=\"ml-2 text-gray-400 hover:text-gray-500\">\n        <svg\n          className=\"h-4 w-4\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n      </button>\n    </div>\n  </div>\n</div>\n\n        </div>\n\n        {/* Page content */}\n        <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\n          <div className=\"py-6\">\n            <div className=\"max-w-7xl mx-auto   \">\n            \n              {children}\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\n","// API Base Configuration\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:5000/api';\r\n\r\n// Broker API functions\r\nexport const brokerAPI = {\r\n  // Get brokers with pagination and filters\r\n  getBrokers: async (page: number, limit: number, approvedByAdmin?: boolean) => {\r\n    const token = localStorage.getItem('adminToken');\r\n    if (!token) throw new Error('No authentication token found');\r\n\r\n    const params = new URLSearchParams({\r\n      page: page.toString(),\r\n      limit: limit.toString(),\r\n      ...(approvedByAdmin !== undefined && { approvedByAdmin: approvedByAdmin.toString() })\r\n    });\r\n\r\n    const response = await fetch(`${API_BASE_URL}/brokers?${params}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) throw new Error('Failed to fetch brokers');\r\n    return response.json();\r\n  },\r\n\r\n  // Approve a broker\r\n  approveBroker: async (brokerId: string) => {\r\n    console.log('🟢 brokerAPI.approveBroker called with ID:', brokerId);\r\n    \r\n    const token = localStorage.getItem('adminToken');\r\n    console.log('🟢 Token found:', token ? 'Yes' : 'No');\r\n    \r\n    if (!token) throw new Error('No authentication token found');\r\n\r\n    const url = `${API_BASE_URL}/brokers/${brokerId}/approve`;\r\n    console.log('🟢 Making API call to:', url);\r\n    console.log('🟢 API_BASE_URL:', API_BASE_URL);\r\n\r\n    const response = await fetch(url, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({})\r\n    });\r\n\r\n    console.log('🟢 Response status:', response.status);\r\n    console.log('🟢 Response ok:', response.ok);\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('🔴 API Error:', errorText);\r\n      throw new Error('Failed to approve broker');\r\n    }\r\n    \r\n    const result = await response.json();\r\n    console.log('🟢 API Response:', result);\r\n    console.log('🟢 API Response data:', result.data);\r\n    console.log('🟢 Updated broker:', result.data);\r\n    return result;\r\n  },\r\n\r\n  // Reject a broker\r\n  rejectBroker: async (brokerId: string) => {\r\n    console.log('🔴 brokerAPI.rejectBroker called with ID:', brokerId);\r\n    \r\n    const token = localStorage.getItem('adminToken');\r\n    console.log('🔴 Token found:', token ? 'Yes' : 'No');\r\n    \r\n    if (!token) throw new Error('No authentication token found');\r\n\r\n    const url = `${API_BASE_URL}/brokers/${brokerId}/reject`;\r\n    console.log('🔴 Making API call to:', url);\r\n    console.log('🔴 API_BASE_URL:', API_BASE_URL);\r\n\r\n    const response = await fetch(url, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({})\r\n    });\r\n\r\n    console.log('🔴 Response status:', response.status);\r\n    console.log('🔴 Response ok:', response.ok);\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('🔴 API Error:', errorText);\r\n      throw new Error('Failed to reject broker');\r\n    }\r\n    \r\n      const result = await response.json();\r\n      console.log('🔴 API Response:', result);\r\n      console.log('🔴 API Response data:', result.data);\r\n      console.log('🔴 Updated broker:', result.data);\r\n      return result;\r\n  }\r\n};\r\n\r\n// Region API functions\r\nexport const regionAPI = {\r\n  // Get all regions\r\n  getRegions: async () => {\r\n    console.log('🟢 regionAPI.getRegions called');\r\n    \r\n    const token = localStorage.getItem('adminToken');\r\n    console.log('🟢 Token found:', token ? 'Yes' : 'No');\r\n    \r\n    if (!token) throw new Error('No authentication token found');\r\n\r\n    const url = `${API_BASE_URL}/regions`;\r\n    console.log('🟢 Making API call to:', url);\r\n\r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    console.log('🟢 Response status:', response.status);\r\n    console.log('🟢 Response ok:', response.ok);\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('🔴 API Error:', errorText);\r\n      throw new Error('Failed to fetch regions');\r\n    }\r\n    \r\n    const result = await response.json();\r\n    console.log('🟢 API Response:', result);\r\n    return result;\r\n  },\r\n\r\n  // Create a new region\r\n  createRegion: async (name: string, description: string) => {\r\n    console.log('🔵 regionAPI.createRegion called with:', { name, description });\r\n    \r\n    const token = localStorage.getItem('adminToken');\r\n    console.log('🔵 Token found:', token ? 'Yes' : 'No');\r\n    \r\n    if (!token) throw new Error('No authentication token found');\r\n\r\n    const url = `${API_BASE_URL}/regions`;\r\n    const requestBody = { name, description };\r\n    \r\n    console.log('🔵 Making API call to:', url);\r\n    console.log('🔵 Request body:', requestBody);\r\n    console.log('🔵 Headers:', {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    });\r\n\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify(requestBody)\r\n    });\r\n\r\n    console.log('🔵 Response status:', response.status);\r\n    console.log('🔵 Response ok:', response.ok);\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('🔴 API Error:', errorText);\r\n      throw new Error('Failed to create region');\r\n    }\r\n    \r\n    const result = await response.json();\r\n    console.log('🔵 API Response:', result);\r\n    return result;\r\n  },\r\n\r\n  // Get brokers by region\r\n  getBrokersByRegion: async (regionId: string, page: number = 1, limit: number = 10) => {\r\n    const token = localStorage.getItem('adminToken');\r\n    if (!token) throw new Error('No authentication token found');\r\n\r\n    const params = new URLSearchParams({\r\n      page: page.toString(),\r\n      limit: limit.toString(),\r\n      regionId: regionId\r\n    });\r\n\r\n    const response = await fetch(`${API_BASE_URL}/brokers/region/${regionId}?${params}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) throw new Error('Failed to fetch brokers by region');\r\n    return response.json();\r\n  }\r\n};","'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Layout from '@/components/Layout';\r\nimport { regionAPI, brokerAPI } from '@/services/api';\r\n\r\ninterface Region {\r\n  _id: string;\r\n  name: string;\r\n  description: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\ninterface Broker {\r\n  _id: string;\r\n  userId: string;\r\n  firmName: string;\r\n  region: Array<{\r\n    _id: string;\r\n    name: string;\r\n    description: string;\r\n  }>;\r\n  regionId: string | null;\r\n  status: string;\r\n  approvedByAdmin: boolean;\r\n  kycDocs: {\r\n    aadhar: string;\r\n    pan: string;\r\n    gst: string;\r\n  };\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  __v: number;\r\n  name?: string;\r\n  email?: string;\r\n  phone?: string;\r\n  address?: string;\r\n  accreditedBy?: string;\r\n  licenseNumber?: string;\r\n  expertiseField?: string;\r\n  state?: string;\r\n}\r\n\r\nexport default function RegionsPage() {\r\n  const [regions, setRegions] = useState<Region[]>([]);\r\n  const [brokers, setBrokers] = useState<Broker[]>([]);\r\n  const [selectedRegion, setSelectedRegion] = useState<Region | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [brokersLoading, setBrokersLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: ''\r\n  });\r\n\r\n  // Fetch regions from API\r\n  const fetchRegions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const response = await regionAPI.getRegions();\r\n      console.log('Regions API Response:', response); // Debug log\r\n      \r\n      // Handle the actual API response structure: response.data.regions\r\n      if (response && response.data && response.data.regions && Array.isArray(response.data.regions)) {\r\n        setRegions(response.data.regions);\r\n      } else if (Array.isArray(response)) {\r\n        setRegions(response);\r\n      } else if (response.data && Array.isArray(response.data)) {\r\n        setRegions(response.data);\r\n      } else if (response.regions && Array.isArray(response.regions)) {\r\n        setRegions(response.regions);\r\n      } else {\r\n        console.warn('Unexpected API response structure:', response);\r\n        setRegions([]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching regions:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch regions');\r\n      setRegions([]); // Ensure regions is always an array\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch brokers by region\r\n  const fetchBrokersByRegion = async (regionId: string) => {\r\n    try {\r\n      setBrokersLoading(true);\r\n      setError('');\r\n      const response = await regionAPI.getBrokersByRegion(regionId);\r\n      console.log('Brokers by region API Response:', response); // Debug log\r\n      \r\n      // Handle the actual API response structure: response.data.brokers\r\n      if (response && response.data && response.data.brokers && Array.isArray(response.data.brokers)) {\r\n        setBrokers(response.data.brokers);\r\n      } else if (Array.isArray(response)) {\r\n        setBrokers(response);\r\n      } else if (response.data && Array.isArray(response.data)) {\r\n        setBrokers(response.data);\r\n      } else if (response.brokers && Array.isArray(response.brokers)) {\r\n        setBrokers(response.brokers);\r\n      } else {\r\n        console.warn('Unexpected brokers API response structure:', response);\r\n        setBrokers([]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching brokers by region:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch brokers');\r\n      setBrokers([]); // Ensure brokers is always an array\r\n    } finally {\r\n      setBrokersLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle region selection\r\n  const handleRegionClick = (region: Region) => {\r\n    setSelectedRegion(region);\r\n    fetchBrokersByRegion(region._id);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log('Form submitted with data:', formData); // Debug log\r\n    \r\n    try {\r\n      setError('');\r\n      console.log('Calling regionAPI.createRegion...'); // Debug log\r\n      const response = await regionAPI.createRegion(formData.name, formData.description);\r\n      console.log('Create region API Response:', response); // Debug log\r\n      \r\n      setFormData({ name: '', description: '' });\r\n      setShowForm(false);\r\n      console.log('Refreshing regions list...'); // Debug log\r\n      fetchRegions(); // Refresh the regions list\r\n    } catch (err) {\r\n      console.error('Error creating region:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to create region');\r\n    }\r\n  };\r\n\r\n  // Handle broker approval\r\n  const handleApprove = async (brokerId: string) => {\r\n    try {\r\n      setError('');\r\n      await brokerAPI.approveBroker(brokerId);\r\n      if (selectedRegion) {\r\n        fetchBrokersByRegion(selectedRegion._id);\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to approve broker');\r\n    }\r\n  };\r\n\r\n  // Handle broker rejection\r\n  const handleReject = async (brokerId: string) => {\r\n    try {\r\n      setError('');\r\n      const response = await brokerAPI.rejectBroker(brokerId);\r\n      console.log('🔴 Reject API response:', response);\r\n      \r\n      // Manually update the broker status in local state since API doesn't update it\r\n      setBrokers(prevBrokers => \r\n        prevBrokers.map(broker => \r\n          broker._id === brokerId \r\n            ? { ...broker, status: 'inactive', approvedByAdmin: false }\r\n            : broker\r\n        )\r\n      );\r\n      \r\n      // Also refresh from API to get any other updates\r\n      if (selectedRegion) {\r\n        fetchBrokersByRegion(selectedRegion._id);\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to reject broker');\r\n    }\r\n  };\r\n\r\n  // Fetch regions when component mounts\r\n  useEffect(() => {\r\n    console.log('🚀 RegionsPage component mounted');\r\n    console.log('🚀 Checking for admin token...');\r\n    const token = localStorage.getItem('adminToken');\r\n    console.log('🚀 Token exists:', token ? 'Yes' : 'No');\r\n    if (token) {\r\n      console.log('🚀 Token preview:', token.substring(0, 20) + '...');\r\n    }\r\n    fetchRegions();\r\n  }, []);\r\n\r\n\r\n  const getInitials = (name: string) => {\r\n    return name.split(' ').map(n => n[0]).join('').toUpperCase();\r\n  };\r\n\r\n  // Helper functions for broker status\r\n  const getStatusColor = (broker: Broker) => {\r\n    if (broker.approvedByAdmin) return 'bg-green-100 text-green-800';\r\n    if (broker.status === 'rejected') return 'bg-red-100 text-red-800';\r\n    return 'bg-yellow-100 text-yellow-800';\r\n  };\r\n\r\n  const getStatusText = (broker: Broker) => {\r\n    if (broker.approvedByAdmin) return 'Approved';\r\n    return 'Pending';\r\n  };\r\n\r\n  const getStatusBadgeColor = (broker: Broker) => {\r\n    if (broker.approvedByAdmin) return 'bg-green-100 text-green-800 border-green-200';\r\n    return 'bg-yellow-100 text-yellow-800 border-yellow-200';\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\" space-y-6 \">\r\n        {/* Page Header */}\r\n        <div className=\"mb-6\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Region Management</h1>\r\n          <p className=\"text-gray-600 mt-1\">Manage regions and view brokers by region</p>\r\n        </div>\r\n\r\n        {/* Add Region Button */}\r\n        <div className=\"flex justify-between items-center\">\r\n          <button\r\n            onClick={() => setShowForm(!showForm)}\r\n            className=\"bg-primary text-white px-4 py-2 rounded-lg hover:bg-primary/90 transition-colors\"\r\n          >\r\n            {showForm ? 'Cancel' : 'Add New Region'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Add Region Form */}\r\n        {showForm && (\r\n          <div className=\" p-6 rounded-lg shadow-sm border border-gray-300\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Add New Region</h3>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Region Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\r\n                  placeholder=\"Enter region name\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Description\r\n                </label>\r\n                <textarea\r\n                  value={formData.description}\r\n                  onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary\"\r\n                  placeholder=\"Enter region description\"\r\n                  rows={3}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"flex space-x-3\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"bg-primary text-white px-4 py-2 rounded-lg hover:bg-primary/90 transition-colors\"\r\n                >\r\n                  Create Region\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowForm(false)}\r\n                  className=\"bg-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-400 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {/* Error Message */}\r\n        {error && (\r\n          <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Regions Table */}\r\n        <div className=\" shadow-sm rounded-lg border border-gray-300 overflow-hidden\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-300\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">REGION NAME</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">DESCRIPTION</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">CREATED DATE</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">UPDATED DATE</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-300\">\r\n                {loading ? (\r\n                  <tr>\r\n                    <td colSpan={4} className=\"px-6 py-4 text-center\">\r\n                      <div className=\"flex items-center justify-center\">\r\n                        <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary\"></div>\r\n                        <span className=\"ml-2 text-gray-600\">Loading regions...</span>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : !Array.isArray(regions) || regions.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan={4} className=\"px-6 py-4 text-center text-gray-500\">\r\n                      No regions found. Create your first region above.\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  regions.map((region, index) => (\r\n                    <tr \r\n                      key={region._id} \r\n                      className={`${index % 2 === 0 ? 'bg-white' : 'bg-gray-50'} hover:bg-gray-100 cursor-pointer border-b border-gray-300 ${\r\n                        selectedRegion?._id === region._id ? 'bg-primary/5' : ''\r\n                      }`}\r\n                      onClick={() => handleRegionClick(region)}\r\n                    >\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">{region.name}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-sm text-gray-900 max-w-xs truncate\">{region.description}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">\r\n                          {new Date(region.createdAt).toLocaleDateString()}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">\r\n                          {new Date(region.updatedAt).toLocaleDateString()}\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Selected Region Brokers Table */}\r\n        {selectedRegion && (\r\n          <div className=\"mt-8\">\r\n            <div className=\"mb-4\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900\">\r\n                Brokers in {selectedRegion.name}\r\n              </h2>\r\n              <p className=\"text-gray-600\">{selectedRegion.description}</p>\r\n            </div>\r\n\r\n            {/* Brokers Table - Simplified design */}\r\n            <div className=\"bg-white shadow-sm rounded-lg border border-gray-200 overflow-hidden\">\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">NAME</th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">COMPANY NAME</th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">CONTACT</th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">STATUS</th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ACTION</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {brokersLoading ? (\r\n                      <tr>\r\n                        <td colSpan={5} className=\"px-6 py-4 text-center\">\r\n                          <div className=\"flex items-center justify-center\">\r\n                            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary\"></div>\r\n                            <span className=\"ml-2 text-gray-600\">Loading brokers...</span>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ) : !Array.isArray(brokers) || brokers.length === 0 ? (\r\n                      <tr>\r\n                        <td colSpan={5} className=\"px-6 py-4 text-center text-gray-500\">\r\n                          No brokers found in this region\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      brokers.map((broker, index) => (\r\n                        <tr key={broker._id} className={`${index % 2 === 0 ? 'bg-white' : 'bg-gray-50'} hover:bg-gray-100 border-b border-gray-200`}>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"flex items-center\">\r\n                              <div className=\"flex-shrink-0\">\r\n                                <div className=\"h-10 w-10 rounded-full bg-orange-500 flex items-center justify-center\">\r\n                                  <span className=\"text-sm font-medium text-white\">\r\n                                    {getInitials(broker.name || broker.firmName || 'B')}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"ml-4\">\r\n                                <div className=\"text-sm font-medium text-gray-900\">\r\n                                  {broker.name || 'N/A'} ({index + 1})\r\n                                </div>\r\n                                <div className=\"text-sm text-gray-500\">{broker.email || 'N/A'}</div>\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            {broker.firmName || 'N/A'}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            {broker.phone || 'N/A'}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <span className={`inline-flex items-center px-3 py-1 text-xs font-medium rounded-full border ${getStatusBadgeColor(broker)}`}>\r\n                              <div className={`w-2 h-2 rounded-full mr-2 ${broker.approvedByAdmin ? 'bg-green-600' : 'bg-yellow-600'}`}></div>\r\n                              {getStatusText(broker)}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                            <div className=\"flex space-x-2\">\r\n                              {broker.approvedByAdmin ? (\r\n                                <span className=\"inline-flex items-center px-3 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800 border border-green-200\">\r\n                                  <div className=\"w-2 h-2 rounded-full mr-2 bg-green-600\"></div>\r\n                                  Approved\r\n                                </span>\r\n                              ) : (\r\n                                <>\r\n                                  <button \r\n                                    onClick={() => handleApprove(broker._id)}\r\n                                    className=\"inline-flex items-center px-4 py-2 text-xs font-medium rounded text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors\"\r\n                                  >\r\n                                    Approve\r\n                                  </button>\r\n                                  <button \r\n                                    onClick={() => handleReject(broker._id)}\r\n                                    className=\"inline-flex items-center px-4 py-2 text-xs font-medium rounded text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors\"\r\n                                  >\r\n                                    Reject\r\n                                  </button>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"],"names":["module","exports","require","vendored","React","AppRouterContext","HooksClientContext","ServerInsertedHtml","process","env","NEXT_RUNTIME","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK","ReactJsxRuntime"],"mappings":"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","ignoreList":[0,1,2,3,4,5]}